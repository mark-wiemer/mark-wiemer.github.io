{"version":3,"sources":["ConstructionAlert.tsx","Navigation.tsx","Home.tsx","About.tsx","Classes/Alg/Preliminaries/IntegerExponents.tsx","Classes/Alg/Preliminaries.tsx","Classes/Algebra.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["ConstructionAlert","useState","show","setShow","variant","onClose","dismissible","Navigation","props","routes","map","element","link","basePath","fullPath","path","key","id","component","to","name","children","child","Home","href","About","IntegerExponents","Provider","Node","inline","formula","Preliminaries","routeTo","Algebra","RouteObject","this","routeList","pathTo404","route","undefined","routeOr404","componentRouteHelper","childrenResult","componentRoute","routeFor","exact","Routes","length","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.81691aec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nconst ConstructionAlert = (): JSX.Element => {\n  const [show, setShow] = useState(true);\n\n  return show ? (\n    <Alert variant=\"primary\" onClose={() => setShow(false)} dismissible>\n      This site is under construction.\n    </Alert>\n  ) : (\n    <></>\n  );\n};\n\nexport default ConstructionAlert;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { RouteObject } from './Routes';\n\n/**\n * Procedurally generated, nested, unordered list of internal links\n */\nconst Navigation = (props: { routes: RouteObject[] }): JSX.Element => (\n  <nav>\n    <ul>{props.routes.map(element => link(element, ''))}</ul>\n  </nav>\n);\n\n/* Return component to be rendered */\nfunction link(element: RouteObject, basePath: string): JSX.Element {\n  let fullPath = `${basePath}/${element.path}`;\n  return (\n    <li key={element.id}>\n      {element.component ? (\n        <Link to={fullPath}>{element.name}</Link>\n      ) : (\n        element.name\n      )}\n      <ul>{element.children.map(child => link(child, fullPath))}</ul>\n    </li>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport MathJax from 'react-mathjax';\n\nconst Home = (): JSX.Element => (\n  <div>\n    <h2>Home</h2>\n    <p>Free, accessible, interactive math lessons.</p>\n    <p>This site is under construction.</p>\n    <p>\n      Check out{' '}\n      <a href=\"https://github.com/mark-wiemer/math-with-mark\">\n        the repository on GitHub\n      </a>{' '}\n      for more information.\n    </p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst About = (): JSX.Element => (\n  <div>\n    <h2>About</h2>\n    <p>\n      Hi, my name is Mark. I'm a math tutor at University of Wisconsin-Madison,\n      and I want to create a site to better serve students struggling in math.\n    </p>\n    <p>\n      This site offers supplemental learning material that I believe is\n      difficult to find elsewhere. Primarily, I focus on abstract\n      problem-solving methods that can be applied to families of problems. With\n      the materials on my site, I aim to help students become unstuck while\n      completing assignments. In this way, I hope to empower students and\n      instill in them confidence in their abilities to tackle large, complex\n      problems.\n    </p>\n    <h3>Acknowledgements</h3>\n    <p>\n      The structure of the lessons on this site was heavily inspired by{' '}\n      <a href=\"https://tutorial.math.lamar.edu\">Paul Dawkins' online notes</a>.\n      Those notes have been an awesome reference for me, both as a student and\n      as a tutor.\n    </p>\n    <h3>Miscellaneous</h3>\n    <p>\n      If you find any issues, points of confusion, or weird behaviors with the\n      website, please{' '}\n      <a href=\"https://github.com/mark-wiemer/mark-wiemer.github.io/issues/new\">\n        contact me here\n      </a>{' '}\n      (a free GitHub account is required). I'm also open to any general feedback\n      about the site through that link.\n    </p>\n    <p>\n      Everything about this website is open source. For the techies out there,\n      you can view the GitHub repo{' '}\n      <a href=\"https://github.com/mark-wiemer/mark-wiemer.github.io\">here</a>.\n    </p>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport MathJax from 'react-mathjax';\n\nconst IntegerExponents = (): JSX.Element => (\n  <div>\n    <h2>Algebra 1-1: Integer Exponents</h2>\n    <p>\n      Using exponents is very common in algebra. Just like multiplication is\n      repeated addition, exponentiation (the fancy math term for raising a\n      number to a power) is repeated multiplication.\n    </p>\n    <h3>Properties</h3>\n    <ol>\n      <MathJax.Provider>\n        <li>\n          <MathJax.Node inline formula={'a^ba^c = a^{b+c}'} />. For example,{' '}\n          <MathJax.Node inline formula={'2^3\\\\cdot 2^4 = 2^7'} />\n        </li>\n      </MathJax.Provider>\n    </ol>\n  </div>\n);\n\nexport default IntegerExponents;\n","import React from 'react';\nimport { routeTo } from '../../Routes';\nimport IntegerExponents from './Preliminaries/IntegerExponents';\nimport { Link } from 'react-router-dom';\n\nconst Preliminaries = () => (\n  <div>\n    <h2>Preliminaries</h2>\n    <p>\n      In this chapter, we will cover topics that are essential to solving\n      algebraic problems. These topics might seem relatively simple, but they\n      are fundamental for the complex material covered in later chapters.\n    </p>\n    <ol>\n      <li>\n        <Link to={routeTo(IntegerExponents)}>Integer Exponents</Link>: The\n        properties of exponents that are most common in algebraic expressions.\n        This section focuses on positive integers for simplicity, and other\n        exponent types are covered later.\n      </li>\n    </ol>\n  </div>\n);\n\nexport default Preliminaries;\n","import React from 'react';\nimport { Link, HashRouter } from 'react-router-dom';\nimport { routeTo } from '../Routes';\nimport Preliminaries from './Alg/Preliminaries';\nimport IntegerExponents from './Alg/Preliminaries/IntegerExponents';\n\nconst Algebra = (): JSX.Element => (\n  <HashRouter>\n    <h2>Algebra</h2>\n    <p>\n      Algebra is the introduction to abstraction in math. Instead of writing all\n      values explicitly, some values are replaced with symbols to mark unknowns.\n      In this way, the core structure of the expression can be manipulated\n      without concern for the actual values. An understanding of these abstract\n      manipulations are key to success not only in mathematics, but also in\n      logic, philosophy, and communication.\n    </p>\n    <h3>\n      <Link to={routeTo(Preliminaries)}>Preliminaries</Link>\n    </h3>\n    <p>\n      In this chapter we focus on properties of expressions used frequently in\n      algebra. This includes exponents, polynomials, rational expressions, and\n      complex numbers.\n    </p>\n    <ul>\n      <li>\n        <p>\n          <Link to={routeTo(IntegerExponents)}>Integer Exponents</Link>: The\n          properties of exponents that are most common in algebraic expressions.\n        </p>\n      </li>\n    </ul>\n  </HashRouter>\n);\n\nexport default Algebra;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport About from './About';\nimport Algebra from './Classes/Algebra';\nimport IntegerExponents from './Classes/Alg/Preliminaries/IntegerExponents';\nimport Preliminaries from './Classes/Alg/Preliminaries';\n\nconst Routes = (props: { routes: RouteObject[] }): JSX.Element => (\n  <div>{props.routes.map(element => route(element, ''))}</div>\n);\n\nexport class RouteObject {\n  id: string;\n  name: string;\n  path: string;\n  component: (() => JSX.Element) | null;\n  children: RouteObject[];\n  constructor(\n    id: string,\n    name: string,\n    path: string,\n    component: (() => JSX.Element) | null,\n    children: RouteObject[],\n  ) {\n    this.id = id;\n    this.name = name;\n    this.path = path;\n    this.component = component;\n    this.children = children;\n  }\n}\n\nexport const routes: RouteObject[] = [\n  new RouteObject('0', 'Home', '', Home, []),\n  new RouteObject('1', 'About', 'About', About, []),\n  new RouteObject('2', 'Classes', 'Classes', null, [\n    new RouteObject('3', 'Algebra', 'Alg', Algebra, [\n      new RouteObject('5', 'Preliminaries', 'Preliminaries', Preliminaries, [\n        new RouteObject(\n          '4',\n          'Integer Exponents',\n          'IntegerExponents',\n          IntegerExponents,\n          [],\n        ),\n      ]),\n    ]),\n  ]),\n];\n\n/**\n * Returns the absolute path to the component, if it exists. Otherwise, returns\n * the absolute path to 404.\n * @param component The component to route to\n */\nexport function routeTo(\n  component: () => JSX.Element,\n  routeList = routes,\n  pathTo404 = '',\n): string {\n  return routeOr404(componentRoute(component, routeList), pathTo404);\n}\n\n/**\n * Returns the given route if it's defined, otherwise returns the path to 404.\n * @param route The potentially-defined route\n */\nfunction routeOr404(route: string | undefined, pathTo404: string) {\n  if (route === undefined) return pathTo404;\n  return route;\n}\n\n/**\n * @param component The component to route to\n * @returns the path to the given component, if it exists, or undefined\n */\nfunction componentRoute(\n  component: () => JSX.Element,\n  routes: RouteObject[],\n): string | undefined {\n  return componentRouteHelper(component, '', routes);\n}\n\nfunction componentRouteHelper(\n  component: () => JSX.Element,\n  path: string,\n  routes: RouteObject[],\n): string | undefined {\n  let basePath = path;\n  for (let route of routes) {\n    path = `${basePath}/${route.path}`;\n    if (route.component === component) return path;\n    let childrenResult = componentRouteHelper(component, path, route.children);\n    if (childrenResult) return childrenResult;\n  }\n  return undefined;\n}\n\nfunction route(element: RouteObject, basePath: string): JSX.Element {\n  let fullPath = `${basePath}/${element.path}`;\n  if (element.children.length > 0) {\n    return (\n      <div key={element.id}>\n        {element.component ? routeFor(element, fullPath) : ''}\n        {element.children.map(child => route(child, fullPath))}\n      </div>\n    );\n  }\n  return routeFor(element, fullPath);\n}\n\nfunction routeFor(element: RouteObject, fullPath: string): JSX.Element {\n  return (\n    <Route\n      key={element.id}\n      exact\n      path={fullPath}\n      // Ternary just to quiet type-checker. Check is done in route method\n      component={element.component ? element.component : undefined}\n    ></Route>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport ConstructionAlert from './ConstructionAlert';\nimport Navigation from './Navigation';\nimport Routes, { routes } from './Routes';\n\nconst App = (): JSX.Element => (\n  <div>\n    <ConstructionAlert />\n    <HashRouter>\n      <Navigation routes={routes} />\n      <Routes routes={routes} />\n    </HashRouter>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}